class Solution {
    public int minInsertions(String s) {
        String str2="";
        int m=s.length();
        for(int i=s.length()-1;i>=0;i--){
            str2=str2+s.charAt(i);
        }
        int dp[][]=new int[m+1][m+1];
        for(int i=0;i<m+1;i++){
            for(int j=0;j<m+1;j++){
                dp[i][j]=-4;
            }
        }
        int ans=m-lcs(s,str2,m,m,dp);
        return(ans);
    }
    public int lcs(String s,String str2,int m,int n,int dp[][]){
        if(m==0 || n==0){
            return(0);
        }
        if(dp[m][n]!=-4){
            return(dp[m][n]);
        }
        if(s.charAt(m-1)==str2.charAt(n-1)){
            dp[m][n]=1+lcs(s,str2,m-1,n-1,dp);
            return dp[m][n];
        }
        else{
            int pick=lcs(s,str2,m-1,n,dp);
            int notpick=lcs(s,str2,m,n-1,dp);
            dp[m][n]=Math.max(pick,notpick);
            return(dp[m][n]);


        }
    }
}
